{"ast":null,"code":"import _toConsumableArray from\"C:/Users/User/Documents/GitHub/vlkbot3/vlkbot/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/User/Documents/GitHub/vlkbot3/vlkbot/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import'./App.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),messages=_useState2[0],setMessages=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),inputValue=_useState4[0],setInputValue=_useState4[1];var handleInputChange=function handleInputChange(event){console.log(event.target.value);setInputValue(event.target.value);};var handleSendMessage=function handleSendMessage(){if(inputValue.trim()!==''){var userMessage={text:inputValue,sender:'user'};var botMessage={text:\"Ian, please don't talk to me\",sender:'bot'};var newMessages=[].concat(_toConsumableArray(messages),[userMessage,botMessage]);setMessages(newMessages);setInputValue('');console.log(newMessages);// Check the messages array\n}};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Vlkbot\"}),/*#__PURE__*/_jsx(\"div\",{className:\"messages-container\",children:messages.map(function(message,index){console.log(message.text);// Check the text property\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"message \".concat(message.sender==='bot'?'bot':'user'),children:message.text},index);})}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Type your message here\",value:inputValue,onChange:handleInputChange}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSendMessage,children:\"Send\"})]})]});}export default App;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","messages","setMessages","_useState3","_useState4","inputValue","setInputValue","handleInputChange","event","console","log","target","value","handleSendMessage","trim","userMessage","text","sender","botMessage","newMessages","concat","_toConsumableArray","className","children","map","message","index","type","placeholder","onChange","onClick"],"sources":["C:/Users/User/Documents/GitHub/vlkbot3/vlkbot/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputChange = (event) => {\n    console.log(event.target.value);\n    setInputValue(event.target.value);\n  };\n\n  const handleSendMessage = () => {\n    if (inputValue.trim() !== '') {\n      const userMessage = { text: inputValue, sender: 'user' };\n      const botMessage = { text: \"Ian, please don't talk to me\", sender: 'bot' };\n      const newMessages = [...messages, userMessage, botMessage];\n      setMessages(newMessages);\n      setInputValue('');\n      console.log(newMessages); // Check the messages array\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Vlkbot</h1>\n      <div className=\"messages-container\">\n        {messages.map((message, index) => {\n          console.log(message.text); // Check the text property\n          return (\n            <div\n              key={index}\n              className={`message ${message.sender === 'bot' ? 'bot' : 'user'}`}\n            >\n              {message.text}\n            </div>\n          );\n        })}\n      </div>\n      <div className=\"input-container\">\n        <input\n          type=\"text\"\n          placeholder=\"Type your message here\"\n          value={inputValue}\n          onChange={handleInputChange}\n        />\n        <button onClick={handleSendMessage}>Send</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"8QAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEnB,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,IAAAC,SAAA,CAAgCN,QAAQ,CAAC,EAAE,CAAC,CAAAO,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAArCG,QAAQ,CAAAF,UAAA,IAAEG,WAAW,CAAAH,UAAA,IAC5B,IAAAI,UAAA,CAAoCX,QAAQ,CAAC,EAAE,CAAC,CAAAY,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAzCE,UAAU,CAAAD,UAAA,IAAEE,aAAa,CAAAF,UAAA,IAEhC,GAAM,CAAAG,iBAAiB,CAAG,QAApB,CAAAA,iBAAiBA,CAAIC,KAAK,CAAK,CACnCC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC,CAC/BN,aAAa,CAACE,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC,CACnC,CAAC,CAED,GAAM,CAAAC,iBAAiB,CAAG,QAApB,CAAAA,iBAAiBA,CAAA,CAAS,CAC9B,GAAIR,UAAU,CAACS,IAAI,CAAC,CAAC,GAAK,EAAE,CAAE,CAC5B,GAAM,CAAAC,WAAW,CAAG,CAAEC,IAAI,CAAEX,UAAU,CAAEY,MAAM,CAAE,MAAO,CAAC,CACxD,GAAM,CAAAC,UAAU,CAAG,CAAEF,IAAI,CAAE,8BAA8B,CAAEC,MAAM,CAAE,KAAM,CAAC,CAC1E,GAAM,CAAAE,WAAW,IAAAC,MAAA,CAAAC,kBAAA,CAAOpB,QAAQ,GAAEc,WAAW,CAAEG,UAAU,EAAC,CAC1DhB,WAAW,CAACiB,WAAW,CAAC,CACxBb,aAAa,CAAC,EAAE,CAAC,CACjBG,OAAO,CAACC,GAAG,CAACS,WAAW,CAAC,CAAE;AAC5B,CACF,CAAC,CAED,mBACEvB,KAAA,QAAK0B,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClB7B,IAAA,OAAA6B,QAAA,CAAI,QAAM,CAAI,CAAC,cACf7B,IAAA,QAAK4B,SAAS,CAAC,oBAAoB,CAAAC,QAAA,CAChCtB,QAAQ,CAACuB,GAAG,CAAC,SAACC,OAAO,CAAEC,KAAK,CAAK,CAChCjB,OAAO,CAACC,GAAG,CAACe,OAAO,CAACT,IAAI,CAAC,CAAE;AAC3B,mBACEtB,IAAA,QAEE4B,SAAS,YAAAF,MAAA,CAAaK,OAAO,CAACR,MAAM,GAAK,KAAK,CAAG,KAAK,CAAG,MAAM,CAAG,CAAAM,QAAA,CAEjEE,OAAO,CAACT,IAAI,EAHRU,KAIF,CAAC,CAEV,CAAC,CAAC,CACC,CAAC,cACN9B,KAAA,QAAK0B,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9B7B,IAAA,UACEiC,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,wBAAwB,CACpChB,KAAK,CAAEP,UAAW,CAClBwB,QAAQ,CAAEtB,iBAAkB,CAC7B,CAAC,cACFb,IAAA,WAAQoC,OAAO,CAAEjB,iBAAkB,CAAAU,QAAA,CAAC,MAAI,CAAQ,CAAC,EAC9C,CAAC,EACH,CAAC,CAEV,CAEA,cAAe,CAAA1B,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}